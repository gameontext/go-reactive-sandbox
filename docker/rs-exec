#!/bin/bash

set -e

#
# Init
#

ip="$(grep "$HOSTNAME" /etc/hosts|awk '{print $1}')"

kafka_heap="$(expr ${RS_KAFKA_HEAP:-256} + 0)"
zookeeper_heap="$(expr ${RS_ZOOKEEPER_HEAP:-256} + 0)"

echo "Kafka:         Enabled (Heap: ${kafka_heap}m)" 
echo "ZooKeeper:     Enabled (Heap: ${zookeeper_heap}m)"

#
# Configure ZooKeeper
#

mkdir -p /data/zookeeper

touch  /opt/zookeeper/conf/zoo.cfg
cat << EOT > /opt/zookeeper/conf/zoo.cfg

tickTime=2000
dataDir=/data/zookeeper
clientPort=2181
EOT

touch /opt/zookeeper/conf/java.env
cat << EOT > /opt/zookeeper/conf/java.env

ZK_SERVER_HEAP=$zookeeper_heap
EOT

#
# Configure Kafka
#

mkdir -p /data/kafka

touch /opt/kafka/config/server.properties
cat << EOT >> /opt/kafka/config/server.properties

listeners = PLAINTEXT://$ip:9092
log.dirs=/data/kafka
EOT

touch /opt/kafka/bin/kafka
cat << EOT > /opt/kafka/bin/kafka
#!/usr/bin/env bash
export KAFKA_HEAP_OPTS="-Xmx${kafka_heap}m -Xms${kafka_heap}m"

exec /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties
EOT
chmod +x /opt/kafka/bin/kafka


# Initial service start..
/opt/kafka/bin/kafka > /dev/stdout 2>&1 &
KAFKA_PID=$!
KAFKA_START_TIME=$(cut -d ' ' -f 22 /proc/$KAFKA_PID/stat)
/opt/zookeeper/bin/zkServer.sh start-foreground > /dev/stdout 2>&1 &
ZOOKEEPER_PID=$!
ZOOKEEPER_START_TIME=$(cut -d ' ' -f 22 /proc/$ZOOKEEPER_PID/stat)

# Wait for a bg process to exit 
wait -n

while [ 1 -eq 1 ]; do

    # figure out which bg process just quit, and relaunch it. 

    if [ "$(cut -d ' ' -f 22 /proc/$KAFKA_PID/stat 2>/dev/null)" = "$KAFKA_START_TIME" ]; then
        /opt/kafka/bin/kafka > /dev/stdout 2>&1 &
        KAFKA_PID=$!
        KAFKA_START_TIME=$(cut -d ' ' -f 22 /proc/$KAFKA_PID/stat)
    fi

    if [ "$(cut -d ' ' -f 22 /proc/$ZOOKEEPER_PID/stat 2>/dev/null)" = "$ZOOKEEPER_START_TIME" ]; then
        sh -x /opt/zookeeper/bin/zkServer.sh start-foreground > /dev/stdout 2>&1 &
        ZOOKEEPER_PID=$!
        ZOOKEEPER_START_TIME=$(cut -d ' ' -f 22 /proc/$ZOOKEEPER_PID/stat)
    fi

    # wait again for a bg process to exit.
    wait -n

done
